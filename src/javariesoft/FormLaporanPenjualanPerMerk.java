/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javariesoft;

import com.erv.db.jenisbarangDao;
import com.erv.db.koneksi;
import com.erv.model.jenisbarang;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author USER
 */
public class FormLaporanPenjualanPerMerk extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormLaporanPenjualanPerMerk
     */
    Connection con;

    public FormLaporanPenjualanPerMerk() {
        initComponents();
        try {
            con = koneksi.getKoneksiJ();
        } catch (SQLException ex) {
            Logger.getLogger(FormLaporanPenjualanPerMerk.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPreview = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTahun = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        cbSemua = new javax.swing.JCheckBox();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormLaporanPenjualanPerMerk.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setToolTipText(resourceMap.getString("Form.toolTipText")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        btnPreview.setFont(resourceMap.getFont("btnPreview.font")); // NOI18N
        btnPreview.setText(resourceMap.getString("btnPreview.text")); // NOI18N
        btnPreview.setName("btnPreview"); // NOI18N
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });
        getContentPane().add(btnPreview);
        btnPreview.setBounds(30, 90, 90, 23);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 20, 70, 15);

        txtTahun.setFont(resourceMap.getFont("txtTahun.font")); // NOI18N
        txtTahun.setText(resourceMap.getString("txtTahun.text")); // NOI18N
        txtTahun.setName("txtTahun"); // NOI18N
        getContentPane().add(txtTahun);
        txtTahun.setBounds(90, 20, 130, 20);

        jButton2.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(130, 90, 90, 23);

        cbSemua.setFont(resourceMap.getFont("cbSemua.font")); // NOI18N
        cbSemua.setText(resourceMap.getString("cbSemua.text")); // NOI18N
        cbSemua.setName("cbSemua"); // NOI18N
        getContentPane().add(cbSemua);
        cbSemua.setBounds(30, 50, 190, 23);

        setBounds(0, 0, 284, 169);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviewActionPerformed
        try {
            // TODO add your handling code here:
            HashMap parameter = new HashMap();
            parameter.put("tahun", txtTahun.getText());
            JasperPrint jasperPrint = null;
            ArrayList<PenjualanPerMerk> dataList = getPenjualanPerMerek(Integer.parseInt(txtTahun.getText()));
            JRBeanCollectionDataSource beanColDataSource
                    = new JRBeanCollectionDataSource(dataList);
            jasperPrint = JasperFillManager.fillReport("report/RekapPenjualanAllMerk1.jasper", parameter, beanColDataSource);
            JasperViewer.viewReport(jasperPrint, false);

        } catch (SQLException ex) {
            Logger.getLogger(FormLaporanPenjualanPerMerk.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormLaporanPenjualanPerMerk.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(FormLaporanPenjualanPerMerk.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPreviewActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        try {
            // TODO add your handling code here:
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormLaporanPenjualanPerMerk.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formInternalFrameClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPreview;
    private javax.swing.JCheckBox cbSemua;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtTahun;
    // End of variables declaration//GEN-END:variables

    public class PenjualanPerMerk {

        private String idmerk;
        private String merk;
        private double penjualan_1;
        private double ppn_1;
        private double retur_1;
        private double penjualan_2;
        private double ppn_2;
        private double retur_2;
        private double penjualan_3;
        private double ppn_3;
        private double retur_3;
        private double penjualan_4;
        private double ppn_4;
        private double retur_4;
        private double penjualan_5;
        private double ppn_5;
        private double retur_5;
        private double penjualan_6;
        private double ppn_6;
        private double retur_6;
        private double penjualan_7;
        private double ppn_7;
        private double retur_7;
        private double penjualan_8;
        private double ppn_8;
        private double retur_8;
        private double penjualan_9;
        private double ppn_9;
        private double retur_9;
        private double penjualan_10;
        private double ppn_10;
        private double retur_10;
        private double penjualan_11;
        private double ppn_11;
        private double retur_11;
        private double penjualan_12;
        private double ppn_12;
        private double retur_12;

        public String getIdmerk() {
            return idmerk;
        }

        public void setIdmerk(String idmerk) {
            this.idmerk = idmerk;
        }

        public String getMerk() {
            return merk;
        }

        public void setMerk(String merk) {
            this.merk = merk;
        }

        public double getPenjualan_1() {
            return penjualan_1;
        }

        public void setPenjualan_1(double penjualan_1) {
            this.penjualan_1 = penjualan_1;
        }

        public double getPpn_1() {
            return ppn_1;
        }

        public void setPpn_1(double ppn_1) {
            this.ppn_1 = ppn_1;
        }

        public double getRetur_1() {
            return retur_1;
        }

        public void setRetur_1(double retur_1) {
            this.retur_1 = retur_1;
        }

        public double getPenjualan_2() {
            return penjualan_2;
        }

        public void setPenjualan_2(double penjualan_2) {
            this.penjualan_2 = penjualan_2;
        }

        public double getPpn_2() {
            return ppn_2;
        }

        public void setPpn_2(double ppn_2) {
            this.ppn_2 = ppn_2;
        }

        public double getRetur_2() {
            return retur_2;
        }

        public void setRetur_2(double retur_2) {
            this.retur_2 = retur_2;
        }

        public double getPenjualan_3() {
            return penjualan_3;
        }

        public void setPenjualan_3(double penjualan_3) {
            this.penjualan_3 = penjualan_3;
        }

        public double getPpn_3() {
            return ppn_3;
        }

        public void setPpn_3(double ppn_3) {
            this.ppn_3 = ppn_3;
        }

        public double getRetur_3() {
            return retur_3;
        }

        public void setRetur_3(double retur_3) {
            this.retur_3 = retur_3;
        }

        public double getPenjualan_4() {
            return penjualan_4;
        }

        public void setPenjualan_4(double penjualan_4) {
            this.penjualan_4 = penjualan_4;
        }

        public double getPpn_4() {
            return ppn_4;
        }

        public void setPpn_4(double ppn_4) {
            this.ppn_4 = ppn_4;
        }

        public double getRetur_4() {
            return retur_4;
        }

        public void setRetur_4(double retur_4) {
            this.retur_4 = retur_4;
        }

        public double getPenjualan_5() {
            return penjualan_5;
        }

        public void setPenjualan_5(double penjualan_5) {
            this.penjualan_5 = penjualan_5;
        }

        public double getPpn_5() {
            return ppn_5;
        }

        public void setPpn_5(double ppn_5) {
            this.ppn_5 = ppn_5;
        }

        public double getRetur_5() {
            return retur_5;
        }

        public void setRetur_5(double retur_5) {
            this.retur_5 = retur_5;
        }

        public double getPenjualan_6() {
            return penjualan_6;
        }

        public void setPenjualan_6(double penjualan_6) {
            this.penjualan_6 = penjualan_6;
        }

        public double getPpn_6() {
            return ppn_6;
        }

        public void setPpn_6(double ppn_6) {
            this.ppn_6 = ppn_6;
        }

        public double getRetur_6() {
            return retur_6;
        }

        public void setRetur_6(double retur_6) {
            this.retur_6 = retur_6;
        }

        public double getPenjualan_7() {
            return penjualan_7;
        }

        public void setPenjualan_7(double penjualan_7) {
            this.penjualan_7 = penjualan_7;
        }

        public double getPpn_7() {
            return ppn_7;
        }

        public void setPpn_7(double ppn_7) {
            this.ppn_7 = ppn_7;
        }

        public double getRetur_7() {
            return retur_7;
        }

        public void setRetur_7(double retur_7) {
            this.retur_7 = retur_7;
        }

        public double getPenjualan_8() {
            return penjualan_8;
        }

        public void setPenjualan_8(double penjualan_8) {
            this.penjualan_8 = penjualan_8;
        }

        public double getPpn_8() {
            return ppn_8;
        }

        public void setPpn_8(double ppn_8) {
            this.ppn_8 = ppn_8;
        }

        public double getRetur_8() {
            return retur_8;
        }

        public void setRetur_8(double retur_8) {
            this.retur_8 = retur_8;
        }

        public double getPenjualan_9() {
            return penjualan_9;
        }

        public void setPenjualan_9(double penjualan_9) {
            this.penjualan_9 = penjualan_9;
        }

        public double getPpn_9() {
            return ppn_9;
        }

        public void setPpn_9(double ppn_9) {
            this.ppn_9 = ppn_9;
        }

        public double getRetur_9() {
            return retur_9;
        }

        public void setRetur_9(double retur_9) {
            this.retur_9 = retur_9;
        }

        public double getPenjualan_10() {
            return penjualan_10;
        }

        public void setPenjualan_10(double penjualan_10) {
            this.penjualan_10 = penjualan_10;
        }

        public double getPpn_10() {
            return ppn_10;
        }

        public void setPpn_10(double ppn_10) {
            this.ppn_10 = ppn_10;
        }

        public double getRetur_10() {
            return retur_10;
        }

        public void setRetur_10(double retur_10) {
            this.retur_10 = retur_10;
        }

        public double getPenjualan_11() {
            return penjualan_11;
        }

        public void setPenjualan_11(double penjualan_11) {
            this.penjualan_11 = penjualan_11;
        }

        public double getPpn_11() {
            return ppn_11;
        }

        public void setPpn_11(double ppn_11) {
            this.ppn_11 = ppn_11;
        }

        public double getRetur_11() {
            return retur_11;
        }

        public void setRetur_11(double retur_11) {
            this.retur_11 = retur_11;
        }

        public double getPenjualan_12() {
            return penjualan_12;
        }

        public void setPenjualan_12(double penjualan_12) {
            this.penjualan_12 = penjualan_12;
        }

        public double getPpn_12() {
            return ppn_12;
        }

        public void setPpn_12(double ppn_12) {
            this.ppn_12 = ppn_12;
        }

        public double getRetur_12() {
            return retur_12;
        }

        public void setRetur_12(double retur_12) {
            this.retur_12 = retur_12;
        }
    }

    private ArrayList<PenjualanPerMerk> getPenjualanPerMerek(int tahun) throws SQLException, ClassNotFoundException {
        List<jenisbarang> jenisbarangList = jenisbarangDao.getAllDetails(con);
        ArrayList<PenjualanPerMerk> data = new ArrayList<>();
        List<DataPenjualan> jan = getPenjualanPerMerk(1, tahun);
        List<DataPenjualan> feb = getPenjualanPerMerk(2, tahun);
        List<DataPenjualan> mar = getPenjualanPerMerk(3, tahun);
        List<DataPenjualan> apr = getPenjualanPerMerk(4, tahun);
        List<DataPenjualan> mei = getPenjualanPerMerk(5, tahun);
        List<DataPenjualan> jun = getPenjualanPerMerk(6, tahun);
        List<DataPenjualan> jul = getPenjualanPerMerk(7, tahun);
        List<DataPenjualan> agt = getPenjualanPerMerk(8, tahun);
        List<DataPenjualan> sep = getPenjualanPerMerk(9, tahun);
        List<DataPenjualan> okt = getPenjualanPerMerk(10, tahun);
        List<DataPenjualan> nov = getPenjualanPerMerk(11, tahun);
        List<DataPenjualan> des = getPenjualanPerMerk(12, tahun);
        boolean stat = false;
        for (jenisbarang j : jenisbarangList) {
            PenjualanPerMerk penjualanPerMerk = new PenjualanPerMerk();
            penjualanPerMerk.idmerk = j.getID();
            penjualanPerMerk.merk = j.getJENIS();
            for (DataPenjualan datajual : jan) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_1 = datajual.getTotal();
                    penjualanPerMerk.ppn_1 = datajual.getPpn();
                    penjualanPerMerk.retur_1 = 0;
                }
            }
            for (DataPenjualan datajual : feb) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_2 = datajual.getTotal();
                    penjualanPerMerk.ppn_2 = datajual.getPpn();
                    penjualanPerMerk.retur_2 = 0;
                }
            }

            for (DataPenjualan datajual : mar) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_3 = datajual.getTotal();
                    penjualanPerMerk.ppn_3 = datajual.getPpn();
                    penjualanPerMerk.retur_3 = 0;
                }
            }

            for (DataPenjualan datajual : apr) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_4 = datajual.getTotal();
                    penjualanPerMerk.ppn_4 = datajual.getPpn();
                    penjualanPerMerk.retur_4 = 0;
                }
            }

            for (DataPenjualan datajual : mei) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_5 = datajual.getTotal();
                    penjualanPerMerk.ppn_5 = datajual.getPpn();
                    penjualanPerMerk.retur_5 = 0;
                }
            }

            for (DataPenjualan datajual : jun) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_6 = datajual.getTotal();
                    penjualanPerMerk.ppn_6 = datajual.getPpn();
                    penjualanPerMerk.retur_6 = 0;
                }
            }

            for (DataPenjualan datajual : jul) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_7 = datajual.getTotal();
                    penjualanPerMerk.ppn_7 = datajual.getPpn();
                    penjualanPerMerk.retur_7 = 0;
                }
            }

            for (DataPenjualan datajual : agt) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_8 = datajual.getTotal();
                    penjualanPerMerk.ppn_8 = datajual.getPpn();
                    penjualanPerMerk.retur_8 = 0;
                }
            }

            for (DataPenjualan datajual : sep) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_9 = datajual.getTotal();
                    penjualanPerMerk.ppn_9 = datajual.getPpn();
                    penjualanPerMerk.retur_9 = 0;
                }
            }

            for (DataPenjualan datajual : okt) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_10 = datajual.getTotal();
                    penjualanPerMerk.ppn_10 = datajual.getPpn();
                    penjualanPerMerk.retur_10 = 0;
                }
            }
            for (DataPenjualan datajual : nov) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_11 = datajual.getTotal();
                    penjualanPerMerk.ppn_11 = datajual.getPpn();
                    penjualanPerMerk.retur_11 = 0;
                }
            }
            for (DataPenjualan datajual : des) {
                if (j.getID().equals(datajual.id)) {
                    stat = true;
                    penjualanPerMerk.penjualan_12 = datajual.getTotal();
                    penjualanPerMerk.ppn_12 = datajual.getPpn();
                    penjualanPerMerk.retur_12 = 0;
                }
            }
            if (cbSemua.isSelected()) {
                data.add(penjualanPerMerk);
            } else {
                if (stat) {
                    data.add(penjualanPerMerk);
                    stat = false;
                }
            }
        }
        return data;
    }

    public Map<String, Double> getPenjualan(String idMerk, int bulan, int tahun) throws SQLException {
        String sql = "select  sum(rp.jumlah * rp.harga - rp.diskon) as total, sum(rp.PPN) as totPPN  from PENJUALAN p "
                + "inner join RINCIPENJUALAN rp on p.id = rp.idpenjualan "
                + "inner join BARANG b on rp.KODEBARANG = b.KODEBARANG "
                + "where month(tanggal)=" + bulan + " and year(tanggal)=" + tahun + " and b.idjenis='" + idMerk + "'"
                + "";
        Statement stat = con.createStatement();
        ResultSet rs = stat.executeQuery(sql);
        Map<String, Double> data = new HashMap<>();
        if (rs.next()) {
            data.put("total", rs.getDouble(1));
            data.put("ppn", rs.getDouble(2));
        }
        return data;
    }

    public List<DataPenjualan> getPenjualanPerMerk(int bulan, int tahun) throws SQLException {
        String sql = "select b.idjenis, sum(rp.jumlah * rp.harga - rp.diskon) as total, sum(rp.ppn) as ppn from PENJUALAN p "
                + "inner join RINCIPENJUALAN rp on p.id = rp.idpenjualan "
                + "inner join BARANG b on rp.KODEBARANG = b.KODEBARANG "
                + "where month(tanggal)=" + bulan + " and year(tanggal)=" + tahun + ""
                + "group by b.idjenis "
                + "";
        Statement stat = con.createStatement();
        ResultSet rs = stat.executeQuery(sql);
        List<DataPenjualan> list = new ArrayList<>();
        DataPenjualan data = null;
        while (rs.next()) {
            data = new DataPenjualan();
            data.setId(rs.getString(1));
            data.setTotal(rs.getDouble(2));
            data.setPpn(rs.getDouble(3));
            list.add(data);
        }
        return list;
    }

    public class DataPenjualan {

        private String id;
        private double total;
        private double ppn;

        public String getId() {
            return id;
        }

        public void setId(String id) {
            this.id = id;
        }

        public double getTotal() {
            return total;
        }

        public void setTotal(double total) {
            this.total = total;
        }

        public double getPpn() {
            return ppn;
        }

        public void setPpn(double ppn) {
            this.ppn = ppn;
        }

    }

}
